# Clustering Analysis: sample-based clustering
#number of clusters. Determined by kmean clustering.
number_clusters <- function(Exp, k.max, FUNcluster = c(kmeans, pam, clara, fanny, hcut), scale = TRUE){
  d <- as.matrix(Exp)
  if (scale == TRUE) d <- scale(d)
  require(factoextra)
  require(cluster)
  p1 <- fviz_nbclust(d, FUNcluster, method = "wss")+labs(subtitle = "Elbow method")
  p2 <- fviz_nbclust(d, FUNcluster, method = "silhouette")+labs(subtitle = "Silhouette method")
  require(cowplot)
  plot_grid(p1,p2)
}
# we now get k parameter

#Exp: data.frame with rownames represent samples, colnames represent features like proteins or genes.
Consensus_Cluster_Analysis <- function(Exp, k, show.cluster = TRUE, saveplot = FALSE, plot.dir.suffix = NULL){
  #hc
  res.dist <- dist(d, method = "euclidean")
  res_hc <- hclust(d = res.dist, method = "ward.D2")
  res_hc_ward <- hclust(d = res.dist, method = "ward.D2")
  res_hc_complete <- hclust(d = res.dist, method = "complete")
  res_hc_single <- hclust(d = res.dist, method = "single")
  res_hc_average <- hclust(d = res.dist, method = "average")
  res_diana <- diana(x = d, # data matrix
                     stand = F, # standardize the data
                     metric = "euclidean" # metric for distance matrix
  )
  
  fviz_cluster(list(data = d, cluster = cutree(res_hc,2)),geom = "point",
               palette = c("#2E9FDF", "#00AFBB", "#E7B800", "#FC4E07"),
               ellipse.type = "convex", # Concentration ellipse
               repel = TRUE, # Avoid label overplotting (slow)
               show.clust.cent = FALSE, ggtheme = theme_minimal(),main = "ward.D2")
  fviz_cluster(list(data = d, cluster = cutree(res_hc_average,2)),geom = "point",
               palette = c("#2E9FDF", "#00AFBB", "#E7B800", "#FC4E07"),
               ellipse.type = "convex", # Concentration ellipse
               repel = TRUE, # Avoid label overplotting (slow)
               show.clust.cent = FALSE, ggtheme = theme_minimal(),main = "average")
  fviz_cluster(list(data = d, cluster = cutree(res_hc_complete,2)),geom = "point",
               palette = c("#2E9FDF", "#00AFBB", "#E7B800", "#FC4E07"),
               ellipse.type = "convex", # Concentration ellipse
               repel = TRUE, # Avoid label overplotting (slow)
               show.clust.cent = FALSE, ggtheme = theme_minimal(),main = "complete")
  fviz_cluster(list(data = d, cluster = cutree(res_hc_single,2)),geom = "point",
               palette = c("#2E9FDF", "#00AFBB", "#E7B800", "#FC4E07"),
               ellipse.type = "convex", # Concentration ellipse
               repel = TRUE, # Avoid label overplotting (slow)
               show.clust.cent = FALSE, ggtheme = theme_minimal(),main = "single")
  fviz_cluster(list(data = d, cluster = cutree(res_diana,2)),geom = "point",
               palette = c("#2E9FDF", "#00AFBB", "#E7B800", "#FC4E07"),
               ellipse.type = "convex", # Concentration ellipse
               repel = TRUE, # Avoid label overplotting (slow)
               show.clust.cent = FALSE, ggtheme = theme_minimal(),main = "divisive hierarchical clustering")
  #kmean
  res_km.2 <- kmeans(d, 2, nstart = 20, iter.max = 50)
  res_km.3 <- kmeans(d, 3, nstart = 20, iter.max = 50)
  res_pam.3 <- pam(d, 3)
  res_pam.2 <- pam(d, 2)
  res_fanny.3 <- fanny(d, 3)
  res_fanny.2 <- fanny(d, 2)
  res_hk.2 <-hkmeans(d, 2)
  res_hk.3 <-hkmeans(d, 3)
  res_mc <- Mclust(d, G=1:4)
  
  fviz_cluster(res_km.2, data = d,
               #palette = c("#2E9FDF", "#00AFBB", "#E7B800", "#FC4E07"),
               #ellipse.type = "euclid", # Concentration ellipse
               star.plot = F, # Add segments from centroids to items
               repel = T, # Avoid label overplotting (slow)
               ggtheme = theme_minimal(), main = "kmean", geom="point", palette = "jco"
  )
  
  
  fviz_cluster(res_pam.2, data = d,
               #palette = c("#2E9FDF", "#00AFBB", "#E7B800", "#FC4E07"),
               #ellipse.type = "euclid", # Concentration ellipse
               star.plot = F, # Add segments from centroids to items
               repel = T, # Avoid label overplotting (slow)
               ggtheme = theme_minimal(), main = "pam", geom="point", palette = "jco"
  )
  fviz_cluster(res_pam.3, data = d,
               #palette = c("#2E9FDF", "#00AFBB", "#E7B800", "#FC4E07"),
               #ellipse.type = "euclid", # Concentration ellipse
               star.plot = F, # Add segments from centroids to items
               repel = T, # Avoid label overplotting (slow)
               ggtheme = theme_minimal(), main = "pam", geom="point", palette = "jco"
  )
  fviz_cluster(res_fanny.2, geom="point",repel = TRUE,
               palette = "jco", ggtheme = theme_minimal(), main = "c-means; fanny",
               legend = "right")
  fviz_cluster(res_fanny.3, geom="point",repel = TRUE,
               palette = "jco", ggtheme = theme_minimal(), main = "c-means; fanny",
               legend = "right")
  fviz_cluster(res_hk.2, geom="point",repel = TRUE,
               palette = "jco", ggtheme = theme_minimal(), main = "hybrid kemean",
               legend = "right")
  fviz_cluster(res_hk.3, geom="point",repel = TRUE,
               palette = "jco", ggtheme = theme_minimal(), main = "hybrid kemean",
               legend = "right")
  fviz_mclust(res_mc, "classification", geom = "point",
              pointsize = 1.5, palette = "jco", ellipse.type = "convex", main = "mclust: model-based clustering")
  
  
  
  
  
  
  
}

#If someone already know which clustering algorithm fit his/her dataset well, following funtion can foucus on that funtion and compare it with others.

